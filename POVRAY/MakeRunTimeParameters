#!/usr/bin/perl
#
#eval "exec perl -S $0 $*" 
#    if $running_under_some_shell;
#------------------------------------------------------------==ADM==
# Custom Software, Developed for CUHEP by staff. 
# This software is in the public domain, furnished "as is", without
# technical support, and with no warranty, express or implied, as
# to its usefulness for any purpose.
#
# GenerateFrames      
#
# REVISION HISTORY
# Created.                                  12/11/2017  doug johnson
#-------------------------------------------------------------------
use strict;
use Getopt::Std;
our($opt_h,$opt_e, $opt_s, $opt_i);
         
getopts("he:s:i:");
my $start = $opt_s;
my $end   = $opt_e;
my $interval= $opt_i || 20;


my $totalFrames = $end - $start;
my $numJobs = $totalFrames / $interval;

for(my $job = 0; $job <= $numJobs; $job++) {
  my $startFrame = $start + $job * $interval;
  my $endFrame   = $startFrame + $interval - 1;
  printf("  %5d  %5d\n",  $startFrame,  $endFrame);
}


exit;
         
#-------------Subroutines ---------------
#  Subroutine to print out message with date
#  Similar to the appearance of syslog
#
sub Print {
  (my $message) = @_;
  chomp($message);
  chomp(my $date = `date`);
  (my @lines) = split("\n", $message);
  foreach my $line (@lines) {
     print("$date\: $line\n");
  }
  return 0;
}
